;; _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_
;;
;;	   __  __                  __  ___          __      __
;;	  / / / /_______  _____   /  |/  /___  ____/ /_  __/ /__  _____
;;	 / / / / ___/ _ \/ ___/  / /|_/ / __ \/ __  / / / / / _ \/ ___/
;;	/ /_/ (__  )  __/ /     / /  / / /_/ / /_/ / /_/ / /  __(__  )
;;	\____/____/\___/_/     /_/  /_/\____/\__,_/\__,_/_/\___/____/
;;
;; Created By Aditya Shakya @adi1090x
;;
;; _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

[module/checknetwork]
type = custom/script

; Available tokens:
;   %counter%
; Command to be executed (using "/usr/bin/env sh -c [command]")
exec = $XDG_CONFIG_HOME/polybar/scripts/check-network

; Conditional command that, if defined, needs to exit successfully
; before the main exec command is invoked.
; Default: ""
;;exec-if = ""

; Will the script output continous content?
; Default: false
tail = true

; Seconds to sleep between updates
; Default: 2 (0 if `tail = true`)
interval = 5

; Available tags:
;   <output> - deprecated
;   <label> (default)
;;format = <label>
;;format-background = #999
;;format-foreground = #000
;;format-padding = 4

; Available tokens:
;   %output%
; Default: %output%
;;label = %output:0:15:...%

; Available tokens:
;   %counter%
;   %pid%
;
; "click-(left|middle|right)" will be executed using "/usr/bin/env sh -c [command]"
click-left = networkmanager_dmenu &
click-middle = networkmanager_dmenu &
click-right = networkmanager_dmenu &
;;double-click-left = echo double left %counter%
;;double-click-middle = echo double middle %counter%
;;double-click-right = echo double right %counter%

; Available tokens:
;   %counter%
;   %pid%
;
; "scroll-(up|down)" will be executed using "/usr/bin/env sh -c [command]"
;;scroll-up = echo scroll up %counter%
;;scroll-down = echo scroll down %counter%

;; _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

[module/glava-update]
type = custom/script
exec = $XDG_CONFIG_HOME/glava/update.sh
tail = true

[module/player-info]
type = custom/script
exec = /usr/share/polybar/scripts/player-mpris-tail.py --icon-playing  --icon-paused  --icon-stopped  -f '%{A1:pctl previous:}  %{A}%{A1:pctl play-pause:} {icon-reversed} %{A}%{A1:pctl next:}  %{A}{:position: {position} / {duration} - :}{:artist:t14:{artist}:}{:artist: -:}{:title:t48: {title}:}'
tail = true
label = %output%

[module/current-player]
type = custom/script
exec = bash -c 'if [ ! -f $XDG_RUNTIME_DIR/player ]; then pctl PRINT; fi; while :; do tail --follow=name $XDG_RUNTIME_DIR/player; pctl PRINT; done'
click-left = pctl NEXT
tail = true
scroll-up = pctl volume 0.05+
scroll-down = pctl volume 0.05-

[module/bluetooth]
type = custom/script
exec = $XDG_CONFIG_HOME/polybar/scripts/bluetooth.sh
interval = 1

[module/topix]
type = custom/script
exec = $XDG_CONFIG_HOME/polybar/scripts/private/topix.sh
tail = true
click-left = kill -USR1 %pid%

[module/yubikey]
type = custom/script
exec = $XDG_CONFIG_HOME/polybar/scripts/yubikey.sh
tail = true
click-left = $XDG_CONFIG_HOME/polybar/scripts/yubikey-click.sh &

[module/yubikey-reset]
type = custom/script
exec = $XDG_CONFIG_HOME/polybar/scripts/yubikey-reset.sh
tail = true

[module/thermal]
type = custom/script
exec = /usr/local/bin/thermal-mode print
click-left = /usr/local/bin/thermal-mode next
click-right = /usr/local/bin/thermal-mode last
scroll-up = /usr/local/bin/thermal-mode next
scroll-down = /usr/local/bin/thermal-mode last
interval = 1

[module/work]
type = custom/script
exec = $XDG_CONFIG_HOME/polybar/scripts/systemd-display.sh work.target 
click-left = $XDG_CONFIG_HOME/polybar/scripts/systemd-click.sh work.target &
interval = 1

[module/homeoffice]
type = custom/script
exec = $XDG_CONFIG_HOME/polybar/scripts/systemd-display.sh homeoffice.target 
click-left = $XDG_CONFIG_HOME/polybar/scripts/systemd-click.sh homeoffice.target &
interval = 1

[module/messengers]
type = custom/script
exec = $XDG_CONFIG_HOME/polybar/scripts/systemd-display.sh messengers.target 
click-left = $XDG_CONFIG_HOME/polybar/scripts/systemd-click.sh messengers.target &
interval = 1

[module/glava]
type = custom/script
exec = $XDG_CONFIG_HOME/polybar/scripts/systemd-display.sh glava.target 
click-left = $XDG_CONFIG_HOME/polybar/scripts/systemd-click.sh glava.target &
interval = 1

[module/foldingathome]
type = custom/script
exec = $XDG_CONFIG_HOME/polybar/scripts/systemd-display.sh foldingathome 
click-left = $XDG_CONFIG_HOME/polybar/scripts/systemd-click.sh foldingathome &
click-right = /bin/FAHControl &
click-middle = /bin/FAHViewer &
interval = 1

[module/vulnerabilities]
type = custom/script
exec = /usr/local/bin/arch-vulnerabilities | jq -s length
format-foreground = ${color.red}
click-left = /usr/local/bin/arch-vulnerabilities | jq -r -s '.[] | "https://security.archlinux.org/" + .name' | xargs google-chrome-stable --new-window &
interval = 360

[module/git-changes]
type = custom/script
exec = $XDG_CONFIG_HOME/polybar/scripts/git-changes.sh
tail = true
click-left = i3-sensible-terminal &

[module/updates-checker]
type = custom/script
exec = $XDG_CONFIG_HOME/polybar/scripts/updates-checker.sh
tail = true

[module/orphaned-packages]
type = custom/script
exec = $XDG_CONFIG_HOME/polybar/scripts/orphaned-packages.sh
tail = true

[module/kernel-update]
type = custom/script
exec = $XDG_CONFIG_HOME/polybar/scripts/kernel-update.sh
tail = true
click-left = $XDG_CONFIG_HOME/polybar/scripts/kernel-update_click.sh &

[module/powermenu]
type = custom/menu

; If true, <label-toggle> will be to the left of the menu items (default).
; If false, it will be on the right of all the items.
expand-right = true

; "menu-LEVEL-N" has the same properties as "label-NAME" with
; the additional "exec" property
;
; Available exec commands:
;   menu-open-LEVEL
;   menu-close
; Other commands will be executed using "/usr/bin/env sh -c $COMMAND"
menu-0-0 = reboot
menu-0-0-exec = menu-open-1
menu-0-1 = shutdown
menu-0-1-exec = menu-open-2

menu-1-0 = back
menu-1-0-exec = menu-open-0
menu-1-1 = reboot
menu-1-1-exec = systemctl reboot

menu-2-0 = shutdown
menu-2-0-exec = systemctl poweroff
menu-2-1 = back
menu-2-1-exec = menu-open-0

; Available tags:
;   <label-toggle> (default) - gets replaced with <label-(open|close)>
;   <menu> (default)
; Note that if you use <label-toggle> you must also include
; the definition for <label-open>

;;format = <label-toggle> <menu>
;;format-prefix = ${menu.icon-menu}
format-spacing = 1

label-open = 
label-close = 


; Optional item separator
; Default: none
label-separator = |

label-open-foreground = ${color.ac}
label-close-foreground = ${color.ac}
label-separator-foreground = ${color.ac}

;; _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

[module/menu]
type = custom/menu

; If true, <label-toggle> will be to the left of the menu items (default).
; If false, it will be on the right of all the items.
expand-right = true

; "menu-LEVEL-N" has the same properties as "label-NAME" with
; the additional "exec" property
;
; Available exec commands:
;   menu-open-LEVEL
;   menu-close
; Other commands will be executed using "/usr/bin/env sh -c $COMMAND"
menu-0-0 = Menu
menu-0-0-exec = $XDG_CONFIG_HOME/polybar/scripts/launcher &
menu-0-1 = Files
menu-0-1-exec = thunar &
menu-0-2 = Terminal
menu-0-2-exec = termite &
menu-0-3 = Browser
menu-0-3-exec = firefox &

; Available tags:
;   <label-toggle> (default) - gets replaced with <label-(open|close)>
;   <menu> (default)
; Note that if you use <label-toggle> you must also include
; the definition for <label-open>

;;format = <label-toggle> <menu>
;;format-prefix = ${menu.icon-menu}
format-spacing = 1

label-open = 
label-close = 


; Optional item separator
; Default: none
label-separator = |

label-open-foreground = ${color.ac}
label-close-foreground = ${color.ac}
label-separator-foreground = ${color.ac}

;; _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_
;;	    __________  ______
;;	   / ____/ __ \/ ____/
;;	  / __/ / / / / /_
;;	 / /___/ /_/ / __/
;;	/_____/\____/_/
;;
;; _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_
