#!/usr/bin/env bash

set -x

function singleScreen() {
  autorandr --load desk --force
}

function widescreen() {
  autorandr --load home-16:9 --force
}

declare -A games=(
  [HogwartsLegacy.exe]="Hogwarts Legacy"
  [Phasmophobia.exe]="Phasmophobia"
  [Ghost Watchers.exe]="Ghost Watchers"
  [Back4Blood.exe]="Back 4 Blood"
  [Among Us.exe]="Among Us"
  [TheDivision2.exe]="The Division 2"
  [SniperElite5.exe]="Sniper Elite 5"
  [portal2.sh]="Portal 2"
  [Anno1800.exe]="Anno 1800"
  [Move or Die/start_linux32.sh]="Move or Die"
  [UnrailedGame.exe]="Unrailed"
)

function detect_game() {
  local processes
  processes=$(ps ux)
  for process in "${!games[@]}"; do
    if grep -q "$process" <<<"$processes"; then
      echo "${games[$process]}"
      return 0
    fi
  done
  return 1
}

function adjust_for_game() {
  local game="${1?}"
  case "$game" in
    "Among Us")
      systemctl --user start discord-overlay.service
      ;;
    "Portal 2")
      widescreen
      ;;
#    "The Division 2")
#      systemctl --user start cloudflare-vpn.service
#      ;;
    *)
      singleScreen
      ;;
    esac
}

services=( glava.target picom.service )
STATE_DIR="$XDG_RUNTIME_DIR/gamemode"

case "$1" in
  start)
    rm -rf "$STATE_DIR"
    mkdir -p "$STATE_DIR"
    if game="$(detect_game)"; then
      adjust_for_game "$game"
    fi
    for service in "${services[@]}"; do
      if systemctl --user is-active -q "$service"; then
        touch "$STATE_DIR/$service"
        systemctl --user stop "$service"
      fi
    done
    ;;
  stop)
    for service in "${services[@]}"; do
      if [[ -f "$STATE_DIR/$service" ]]; then
        systemctl --user start "$service"
      fi
    done
    autorandr_dmenu
    ;;
  *)
    echo "ðŸ¤·"
    exit 1
    ;;
esac
