#!/usr/bin/env bash

set -ex

function notification_send() {
  dunstify -h string:x-dunst-stack-tag:updates "$@"
}

if systemctl --user is-active -q gamemode.service; then
  exit 5
fi

if nmcli -g name connection show --active | xargs -r -i nmcli -g connection.metered connection show {} | grep -q yes; then
  notification_send -t 10000 -u normal $'Updates skipped!\n\nUsing metered connection'
  exit 6
fi

if ((100 / ($(cat /sys/class/power_supply/BAT0/charge_full) / $(cat /sys/class/power_supply/BAT0/charge_now)) < 75)); then
  notification_send -t 10000 -u normal $'Updates skipped!\n\nRunning on less than 75% battery'
  exit 7
fi

if [[ -e /var/lib/pacman/db.lck ]]; then
  if [ $(($(date +%s) - $(date +%s -r /var/lib/pacman/db.lck))) -gt 1800 ]; then
    sudo rm /var/lib/pacman/db.lck
  else
    notification_send -t 3590000 -u critical $'Updates aborted!\n\nDatabase lock exists'
    exit 8
  fi
fi

if items="$(sudo informant check)"; then
  sudo systemctl start reflector.service

  UPDATES=$(paru -Qu --repo 2>/dev/null | (grep -v ignored -c || true))
  AUR_UPDATES=$(paru -Qu --aur --devel 2>/dev/null | (grep -v ignored -c || true))

  if (((UPDATES + AUR_UPDATES) >= 1)) && ! pgrep -x paru &>/dev/null; then
    if [[ "$1" == '--unattended' ]]; then
      sudo systemctl reset-failed updates-run.scope || true
      if ! sudo systemctl is-active -q updates-run.scope; then
        notification_send -t 10000 -u low "$UPDATES | $AUR_UPDATES" "$(paru -Qu --devel | grep -v ignored | awk '{print $1}' | sed -z '$ s/\n$//' | tr '\n' ',')"

        if systemd-inhibit --why Updates --mode block --what shutdown sudo -E systemd-run --uid "$USER" --unit updates-run --nice 19 --property=CPUWeight=1 --property=MemoryMax=16G --setenv=NICE=19 --scope --quiet -- paru -Syu --noconfirm; then
          notification_send -t 10000 -u normal 'Updates finished!'
        elif [[ "$(notification_send -t 3590000 -u critical 'Updates failed!' -A Show,Show)" == "Show" ]]; then
          i3-sensible-terminal -- bash -c 'journalctl --unit=updates-run.scope --since=-1h | exec lnav'
        fi
      else
        exit 0
      fi
    else
      exec i3-sensible-terminal --wait -- paru -Syu --noconfirm
    fi
  else
    exit 0
  fi

  if packagesToRebuild="$(checkrebuild | grep -v -e flashpoint-bin -e intellij-idea-ultimate-edition -e proton-ge-custom-bin -e rider)"; then
    notification_send -t 3590000 -u critical "Packages need to be rebuilt" "$(echo "$packagesToRebuild" | awk '{print $2}' | sed -z '$ s/\n$//' | tr '\n' ',')"
  fi
elif ((items > 100)); then
  notification_send -t 10000 -u normal 'Error checking Arch news!'
elif [[ "$(notification_send -t 10000 -u critical "$items Unread Arch news articles!" -A Show,Show)" == "Show" ]]; then
  i3-sensible-terminal -- bash -c 'sudo informant read'
fi
