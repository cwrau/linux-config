#!/usr/bin/env bash

set -ex

function notification-send() {
  local replace_arg
  local id_file=$1
  local output
  shift

  if [[ -f $id_file ]]; then
    replace_arg="--replace=$(cat "$id_file")"
  fi

  # shellcheck disable=SC2086
  readarray output <<<"$(dunstify $replace_arg --printid "$@")"
  echo "${output[0]}" | head -1 > "$id_file"
  echo "${output[@]:1}"
}

if [ -e /var/lib/pacman/db.lck ]; then
  if [ $(($(date +%s) - $(date +%s -r /var/lib/pacman/db.lck))) -gt 1800 ]; then
    sudo rm /var/lib/pacman/db.lck
  else
    notification-send "$XDG_RUNTIME_DIR/updates-finished-notification" -t 3590000 -u critical 'Updates aborted! Database lock exists'
    exit 0
  fi
fi

if sudo informant check; then
  timeout 20 /usr/bin/paru -Sy

  UPDATES=$(paru -Qu --repo 2>/dev/null | (grep -v ignored -c || true))
  AUR_UPDATES=$(paru -Qu --aur --devel 2> /dev/null | (grep -v ignored -c || true))

  if (( (UPDATES + AUR_UPDATES) >= 1 )) && ! pgrep -x paru &> /dev/null; then
    if [ "$1" = '--unattended' ]; then
      if sudo systemctl is-failed updates-run; then
        sudo systemctl reset-failed updates-run
      fi

      if ! sudo systemctl is-active updates-run; then
        notification-send "$XDG_RUNTIME_DIR/updates-notification" -t 10000 -u low "$UPDATES | $AUR_UPDATES" "$(paru -Qu --devel | grep -v ignored | awk '{print $1}' | sed -z '$ s/\n$//' | tr '\n' ',')"

        mapfile -t environment < <(awk 'BEGIN{for(v in ENVIRON) print "--setenv=" v}')
        if systemd-inhibit --why Updates --mode block --what shutdown sudo -E systemd-run --uid "$USER" --unit updates-run --wait --nice 19 --property=CPUWeight=1 ${environment[@]} -- paru -Syu --devel --noconfirm --removemake --combinedupgrade --batchinstall; then
          notification-send "$XDG_RUNTIME_DIR/updates-finished-notification" -t 10000 -u normal 'Updates done!'
        else
          if [[ "$(notification-send "$XDG_RUNTIME_DIR/updates-finished-notification" -t 3590000 -u critical 'Updates failed!' -A Show,Show)" == "Show" ]]; then
            i3-sensible-terminal -- journalctl _SYSTEMD_INVOCATION_ID="$(sudo systemctl show -p InvocationID --value updates-run.service)"
          fi
        fi

        dunstify --close="$(cat "$XDG_RUNTIME_DIR/updates-notification")"
      fi
    else
      i3-sensible-terminal --wait -- paru -Syu --devel --noconfirm --removemake --combinedupgrade --batchinstall
    fi
  fi
else
  items=$?
  if [ "$items" -gt 100 ]; then
    notify-send.sh -R "$XDG_RUNTIME_DIR/updates-check-notification" -t 10000 -u normal 'Error checking Arch news!'
  else
    notify-send.sh -R "$XDG_RUNTIME_DIR/updates-check-notification" -t 10000 -u critical "$items Unread Arch news articles!"
  fi
fi
