#!/usr/bin/env bash

set -ex

if [ -e /var/lib/pacman/db.lck ]; then
  if [ $(($(date +%s) - $(date +%s -r /var/lib/pacman/db.lck))) -gt 1800 ]; then
    sudo rm /var/lib/pacman/db.lck
  else
    notify-send.sh -R $XDG_RUNTIME_DIR/updates-finished-notification -t 10000 -u critical 'Updates aborted! Database lock exists'
    exit 0
  fi
fi

if sudo informant check; then
  timeout 20 /bin/paru -Sy

  UPDATES=$(paru -Qu --repo 2>/dev/null | wc -l)
  AUR_UPDATES=$(paru -Qu --aur --devel 2> /dev/null | wc -l)

  if (( (UPDATES + AUR_UPDATES) >= 1 )) && ! pgrep -x paru &> /dev/null &> /dev/null; then
    if [ "$1" = '--unattended' ]; then
      if sudo systemctl is-failed updates-run; then
        sudo systemctl reset-failed updates-run
      fi

      if ! sudo systemctl is-active updates-run; then
        notify-send.sh -R $XDG_RUNTIME_DIR/updates-notification -t 10000 -u low "$UPDATES | $AUR_UPDATES" "$(paru -Quq --devel | sed -z '$ s/\n$//' | tr '\n' ',')"

        if systemd-inhibit --why Updates sudo systemd-run --uid $USER --unit updates-run --wait --nice 19 --slice updates.slice -- paru -Syu --devel --noconfirm --removemake --combinedupgrade --batchinstall; then
          notify-send.sh -R $XDG_RUNTIME_DIR/updates-finished-notification -t 10000 -u normal 'Updates done!'
        else
          notify-send.sh -R $XDG_RUNTIME_DIR/updates-finished-notification -t 1000000 -u critical 'Updates failed!' -o Show:"i3-msg -s $(echo -n /run/user/$UID/i3/ipc-socket.*) scratchpad show"
          timeout 55m i3-sensible-terminal --role=UPDATES --wait -- journalctl _SYSTEMD_INVOCATION_ID=$(sudo systemctl show -p InvocationID --value updates-run.service)
          notify-send.sh -R $XDG_RUNTIME_DIR/updates-finished-notification -f -t 0 ''
        fi

        notify-send.sh -s $(cat $XDG_RUNTIME_DIR/updates-notification)
      fi
    else
      i3-sensible-terminal --wait -- paru -Syu --devel --noconfirm --removemake --combinedupgrade --batchinstall
    fi
  fi
else
  items=$?
  if [ "$items" -gt 100 ]; then
    notify-send.sh -R $XDG_RUNTIME_DIR/updates-check-notification -t 10000 -u normal 'Error checking Arch news!'
  else
    notify-send.sh -R $XDG_RUNTIME_DIR/updates-check-notification -t 10000 -u critical "$items Unread Arch news articles!"
  fi
fi
